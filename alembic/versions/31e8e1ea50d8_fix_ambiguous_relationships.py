"""fix ambiguous relationships

Revision ID: 31e8e1ea50d8
Revises: 
Create Date: 2025-04-28 23:19:21.674240

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '31e8e1ea50d8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_companies_id'), 'companies', ['id'], unique=False)
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('cargo', sa.String(), nullable=True),
    sa.Column('dni', sa.String(), nullable=True),
    sa.Column('zona_venta', sa.String(), nullable=True),
    sa.Column('area', sa.String(), nullable=True),
    sa.Column('ceco', sa.String(), nullable=True),
    sa.Column('gerencia', sa.String(), nullable=True),
    sa.Column('jefe_id', sa.Integer(), nullable=True),
    sa.Column('cuenta_bancaria', sa.String(), nullable=True),
    sa.Column('banco', sa.String(), nullable=True),
    sa.Column('id_empresa', sa.Integer(), nullable=True),
    sa.Column('estado', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_empresa'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['jefe_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_id_user'), 'users', ['id_user'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('documentos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fecha_solicitud', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('fecha_rendicion', sa.Date(), nullable=True),
    sa.Column('dni', sa.String(), nullable=True),
    sa.Column('usuario', sa.String(), nullable=True),
    sa.Column('gerencia', sa.String(), nullable=True),
    sa.Column('ruc', sa.String(), nullable=True),
    sa.Column('proveedor', sa.String(), nullable=True),
    sa.Column('fecha_emision', sa.Date(), nullable=True),
    sa.Column('moneda', sa.String(), nullable=True),
    sa.Column('tipo_documento', sa.String(), nullable=True),
    sa.Column('serie', sa.String(), nullable=True),
    sa.Column('correlativo', sa.String(), nullable=True),
    sa.Column('tipo_gasto', sa.String(), nullable=True),
    sa.Column('sub_total', sa.Float(), nullable=True),
    sa.Column('igv', sa.Float(), nullable=True),
    sa.Column('no_gravadas', sa.Float(), nullable=True),
    sa.Column('importe_facturado', sa.Float(), nullable=True),
    sa.Column('tc', sa.Float(), nullable=True),
    sa.Column('anticipo', sa.Float(), nullable=True),
    sa.Column('total', sa.Float(), nullable=True),
    sa.Column('pago', sa.Float(), nullable=True),
    sa.Column('detalle', sa.String(), nullable=True),
    sa.Column('estado', sa.String(), nullable=True),
    sa.Column('empresa', sa.String(), nullable=True),
    sa.Column('archivo', sa.String(), nullable=True),
    sa.Column('tipo_solicitud', sa.String(), nullable=True),
    sa.Column('tipo_cambio', sa.Float(), nullable=True),
    sa.Column('afecto', sa.Float(), nullable=True),
    sa.Column('inafecto', sa.Float(), nullable=True),
    sa.Column('rubro', sa.String(), nullable=True),
    sa.Column('cuenta_contable', sa.Integer(), nullable=True),
    sa.Column('responsable', sa.String(), nullable=True),
    sa.Column('area', sa.String(), nullable=True),
    sa.Column('ceco', sa.String(), nullable=True),
    sa.Column('tipo_anticipo', sa.String(), nullable=True),
    sa.Column('motivo', sa.String(), nullable=True),
    sa.Column('fecha_viaje', sa.Date(), nullable=True),
    sa.Column('dias', sa.Integer(), nullable=True),
    sa.Column('presupuesto', sa.Float(), nullable=True),
    sa.Column('banco', sa.String(), nullable=True),
    sa.Column('numero_cuenta', sa.String(), nullable=True),
    sa.Column('origen', sa.String(), nullable=True),
    sa.Column('destino', sa.String(), nullable=True),
    sa.Column('numero_rendicion', sa.String(), nullable=True),
    sa.Column('tipo_viaje', sa.String(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('id_numero_rendicion', sa.Integer(), nullable=True),
    sa.Column('id_empresa', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_empresa'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documentos_id'), 'documentos', ['id'], unique=False)
    op.create_table('rendicion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('estado', sa.String(), nullable=True),
    sa.Column('fecha_registro', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('fecha_actualizacion', sa.Date(), nullable=True),
    sa.Column('id_empresa', sa.Integer(), nullable=True),
    sa.Column('id_aprobador', sa.Integer(), nullable=True),
    sa.Column('nom_aprobador', sa.String(), nullable=True),
    sa.Column('id_contador', sa.Integer(), nullable=True),
    sa.Column('nom_contador', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id_aprobador'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_contador'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_empresa'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rendicion_id'), 'rendicion', ['id'], unique=False)
    op.create_table('solicitud',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('estado', sa.String(), nullable=True),
    sa.Column('fecha_registro', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('fecha_actualizacion', sa.Date(), nullable=True),
    sa.Column('id_empresa', sa.Integer(), nullable=True),
    sa.Column('id_aprobador', sa.Integer(), nullable=True),
    sa.Column('nom_aprobador', sa.String(), nullable=True),
    sa.Column('id_contador', sa.Integer(), nullable=True),
    sa.Column('nom_contador', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id_aprobador'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_contador'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_empresa'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solicitud_id'), 'solicitud', ['id'], unique=False)
    op.create_table('rendicion_solicitud',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rendicion_id', sa.Integer(), nullable=False),
    sa.Column('solicitud_id', sa.Integer(), nullable=False),
    sa.Column('fecha_creacion', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('fecha_actualizacion', sa.Date(), nullable=True),
    sa.Column('estado', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['rendicion_id'], ['rendicion.id'], ),
    sa.ForeignKeyConstraint(['solicitud_id'], ['solicitud.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rendicion_solicitud_id'), 'rendicion_solicitud', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rendicion_solicitud_id'), table_name='rendicion_solicitud')
    op.drop_table('rendicion_solicitud')
    op.drop_index(op.f('ix_solicitud_id'), table_name='solicitud')
    op.drop_table('solicitud')
    op.drop_index(op.f('ix_rendicion_id'), table_name='rendicion')
    op.drop_table('rendicion')
    op.drop_index(op.f('ix_documentos_id'), table_name='documentos')
    op.drop_table('documentos')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id_user'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.drop_index(op.f('ix_companies_id'), table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###
